// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: meta.proto

package gometa

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node_Actions_ConnectType int32

const (
	Node_Actions_CONNECTDefault Node_Actions_ConnectType = 0
	Node_Actions_CONNECTOne     Node_Actions_ConnectType = 1
	Node_Actions_CONNECTArray   Node_Actions_ConnectType = 2
	Node_Actions_CONNECTMap     Node_Actions_ConnectType = 3
	Node_Actions_CONNECTMany    Node_Actions_ConnectType = 4
)

// Enum value maps for Node_Actions_ConnectType.
var (
	Node_Actions_ConnectType_name = map[int32]string{
		0: "CONNECTDefault",
		1: "CONNECTOne",
		2: "CONNECTArray",
		3: "CONNECTMap",
		4: "CONNECTMany",
	}
	Node_Actions_ConnectType_value = map[string]int32{
		"CONNECTDefault": 0,
		"CONNECTOne":     1,
		"CONNECTArray":   2,
		"CONNECTMap":     3,
		"CONNECTMany":    4,
	}
)

func (x Node_Actions_ConnectType) Enum() *Node_Actions_ConnectType {
	p := new(Node_Actions_ConnectType)
	*p = x
	return p
}

func (x Node_Actions_ConnectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_Actions_ConnectType) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_proto_enumTypes[0].Descriptor()
}

func (Node_Actions_ConnectType) Type() protoreflect.EnumType {
	return &file_meta_proto_enumTypes[0]
}

func (x Node_Actions_ConnectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Node_Actions_ConnectType.Descriptor instead.
func (Node_Actions_ConnectType) EnumDescriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 0}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtomTable   *Node_Table   `protobuf:"bytes,1,opt,name=atomTable,proto3" json:"atomTable,omitempty"`
	AtomActions *Node_Actions `protobuf:"bytes,2,opt,name=atomActions,proto3" json:"atomActions,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetAtomTable() *Node_Table {
	if x != nil {
		return x.AtomTable
	}
	return nil
}

func (x *Node) GetAtomActions() *Node_Actions {
	if x != nil {
		return x.AtomActions
	}
	return nil
}

// Graph
type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName  string  `protobuf:"bytes,1,opt,name=packageName,proto3" json:"packageName,omitempty"`
	DatabaseName string  `protobuf:"bytes,2,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
	PkName       string  `protobuf:"bytes,3,opt,name=pkName,proto3" json:"pkName,omitempty"`
	Nodes        []*Node `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{1}
}

func (x *Graph) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Graph) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *Graph) GetPkName() string {
	if x != nil {
		return x.PkName
	}
	return ""
}

func (x *Graph) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string            `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Columns   []*Node_Table_Col `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Pks       []string          `protobuf:"bytes,3,rep,name=pks,proto3" json:"pks,omitempty"`
	IdAuto    string            `protobuf:"bytes,4,opt,name=idAuto,proto3" json:"idAuto,omitempty"`
	Fks       []*Node_Table_Fk  `protobuf:"bytes,5,rep,name=fks,proto3" json:"fks,omitempty"`
	Uniques   []string          `protobuf:"bytes,6,rep,name=uniques,proto3" json:"uniques,omitempty"`
}

func (x *Node_Table) Reset() {
	*x = Node_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Table) ProtoMessage() {}

func (x *Node_Table) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Table.ProtoReflect.Descriptor instead.
func (*Node_Table) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Node_Table) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Node_Table) GetColumns() []*Node_Table_Col {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Node_Table) GetPks() []string {
	if x != nil {
		return x.Pks
	}
	return nil
}

func (x *Node_Table) GetIdAuto() string {
	if x != nil {
		return x.IdAuto
	}
	return ""
}

func (x *Node_Table) GetFks() []*Node_Table_Fk {
	if x != nil {
		return x.Fks
	}
	return nil
}

func (x *Node_Table) GetUniques() []string {
	if x != nil {
		return x.Uniques
	}
	return nil
}

type Node_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsertItem *Node_Actions_Insert `protobuf:"bytes,7,opt,name=insertItem,proto3" json:"insertItem,omitempty"`
	UpdateItem *Node_Actions_Update `protobuf:"bytes,9,opt,name=updateItem,proto3" json:"updateItem,omitempty"`
	InsupdItem *Node_Actions_Insupd `protobuf:"bytes,10,opt,name=insupdItem,proto3" json:"insupdItem,omitempty"`
	DeleteItem *Node_Actions_Delete `protobuf:"bytes,12,opt,name=deleteItem,proto3" json:"deleteItem,omitempty"`
	DelecsItem *Node_Actions_Delecs `protobuf:"bytes,13,opt,name=delecsItem,proto3" json:"delecsItem,omitempty"`
	EditItem   *Node_Actions_Edit   `protobuf:"bytes,14,opt,name=editItem,proto3" json:"editItem,omitempty"`
	TopicsItem *Node_Actions_Topics `protobuf:"bytes,15,opt,name=topicsItem,proto3" json:"topicsItem,omitempty"`
}

func (x *Node_Actions) Reset() {
	*x = Node_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions) ProtoMessage() {}

func (x *Node_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions.ProtoReflect.Descriptor instead.
func (*Node_Actions) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Node_Actions) GetInsertItem() *Node_Actions_Insert {
	if x != nil {
		return x.InsertItem
	}
	return nil
}

func (x *Node_Actions) GetUpdateItem() *Node_Actions_Update {
	if x != nil {
		return x.UpdateItem
	}
	return nil
}

func (x *Node_Actions) GetInsupdItem() *Node_Actions_Insupd {
	if x != nil {
		return x.InsupdItem
	}
	return nil
}

func (x *Node_Actions) GetDeleteItem() *Node_Actions_Delete {
	if x != nil {
		return x.DeleteItem
	}
	return nil
}

func (x *Node_Actions) GetDelecsItem() *Node_Actions_Delecs {
	if x != nil {
		return x.DelecsItem
	}
	return nil
}

func (x *Node_Actions) GetEditItem() *Node_Actions_Edit {
	if x != nil {
		return x.EditItem
	}
	return nil
}

func (x *Node_Actions) GetTopicsItem() *Node_Actions_Topics {
	if x != nil {
		return x.TopicsItem
	}
	return nil
}

type Node_Table_Col struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName string `protobuf:"bytes,1,opt,name=columnName,proto3" json:"columnName,omitempty"`
	TypeName   string `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Notnull    bool   `protobuf:"varint,4,opt,name=notnull,proto3" json:"notnull,omitempty"`
	Auto       bool   `protobuf:"varint,5,opt,name=auto,proto3" json:"auto,omitempty"`
	Recurse    bool   `protobuf:"varint,6,opt,name=recurse,proto3" json:"recurse,omitempty"`
	InOneof    string `protobuf:"bytes,7,opt,name=inOneof,proto3" json:"inOneof,omitempty"`
}

func (x *Node_Table_Col) Reset() {
	*x = Node_Table_Col{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Table_Col) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Table_Col) ProtoMessage() {}

func (x *Node_Table_Col) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Table_Col.ProtoReflect.Descriptor instead.
func (*Node_Table_Col) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Node_Table_Col) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *Node_Table_Col) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Node_Table_Col) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Node_Table_Col) GetNotnull() bool {
	if x != nil {
		return x.Notnull
	}
	return false
}

func (x *Node_Table_Col) GetAuto() bool {
	if x != nil {
		return x.Auto
	}
	return false
}

func (x *Node_Table_Col) GetRecurse() bool {
	if x != nil {
		return x.Recurse
	}
	return false
}

func (x *Node_Table_Col) GetInOneof() string {
	if x != nil {
		return x.InOneof
	}
	return ""
}

type Node_Table_Fk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FkTable  string `protobuf:"bytes,1,opt,name=fkTable,proto3" json:"fkTable,omitempty"`
	FkColumn string `protobuf:"bytes,2,opt,name=fkColumn,proto3" json:"fkColumn,omitempty"`
	Column   string `protobuf:"bytes,3,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *Node_Table_Fk) Reset() {
	*x = Node_Table_Fk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Table_Fk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Table_Fk) ProtoMessage() {}

func (x *Node_Table_Fk) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Table_Fk.ProtoReflect.Descriptor instead.
func (*Node_Table_Fk) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Node_Table_Fk) GetFkTable() string {
	if x != nil {
		return x.FkTable
	}
	return ""
}

func (x *Node_Table_Fk) GetFkColumn() string {
	if x != nil {
		return x.FkColumn
	}
	return ""
}

func (x *Node_Table_Fk) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

type Node_Actions_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string                   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	ActionName  string                   `protobuf:"bytes,2,opt,name=actionName,proto3" json:"actionName,omitempty"`
	RelateArgs  map[string]string        `protobuf:"bytes,3,rep,name=relateArgs,proto3" json:"relateArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RelateExtra map[string]string        `protobuf:"bytes,4,rep,name=relateExtra,proto3" json:"relateExtra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Marker      string                   `protobuf:"bytes,5,opt,name=marker,proto3" json:"marker,omitempty"`
	Dimension   Node_Actions_ConnectType `protobuf:"varint,6,opt,name=dimension,proto3,enum=molecule.Node_Actions_ConnectType" json:"dimension,omitempty"`
}

func (x *Node_Actions_Connection) Reset() {
	*x = Node_Actions_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Connection) ProtoMessage() {}

func (x *Node_Actions_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Connection.ProtoReflect.Descriptor instead.
func (*Node_Actions_Connection) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Node_Actions_Connection) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Node_Actions_Connection) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Connection) GetRelateArgs() map[string]string {
	if x != nil {
		return x.RelateArgs
	}
	return nil
}

func (x *Node_Actions_Connection) GetRelateExtra() map[string]string {
	if x != nil {
		return x.RelateExtra
	}
	return nil
}

func (x *Node_Actions_Connection) GetMarker() string {
	if x != nil {
		return x.Marker
	}
	return ""
}

func (x *Node_Actions_Connection) GetDimension() Node_Actions_ConnectType {
	if x != nil {
		return x.Dimension
	}
	return Node_Actions_CONNECTDefault
}

type Node_Actions_Insert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Insert) Reset() {
	*x = Node_Actions_Insert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Insert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Insert) ProtoMessage() {}

func (x *Node_Actions_Insert) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Insert.ProtoReflect.Descriptor instead.
func (*Node_Actions_Insert) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Node_Actions_Insert) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Insert) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Insert) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Insert) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Insert) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Empties          []string                   `protobuf:"bytes,5,rep,name=empties,proto3" json:"empties,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Update) Reset() {
	*x = Node_Actions_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Update) ProtoMessage() {}

func (x *Node_Actions_Update) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Update.ProtoReflect.Descriptor instead.
func (*Node_Actions_Update) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Node_Actions_Update) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Update) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Update) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Update) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Update) GetEmpties() []string {
	if x != nil {
		return x.Empties
	}
	return nil
}

func (x *Node_Actions_Update) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Insupd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Insupd) Reset() {
	*x = Node_Actions_Insupd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Insupd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Insupd) ProtoMessage() {}

func (x *Node_Actions_Insupd) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Insupd.ProtoReflect.Descriptor instead.
func (*Node_Actions_Insupd) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *Node_Actions_Insupd) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Insupd) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Insupd) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Insupd) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Insupd) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Delete) Reset() {
	*x = Node_Actions_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Delete) ProtoMessage() {}

func (x *Node_Actions_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Delete.ProtoReflect.Descriptor instead.
func (*Node_Actions_Delete) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 4}
}

func (x *Node_Actions_Delete) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Delete) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Delete) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Delete) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Delete) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Delecs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Delecs) Reset() {
	*x = Node_Actions_Delecs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Delecs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Delecs) ProtoMessage() {}

func (x *Node_Actions_Delecs) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Delecs.ProtoReflect.Descriptor instead.
func (*Node_Actions_Delecs) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 5}
}

func (x *Node_Actions_Delecs) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Delecs) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Delecs) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Delecs) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Delecs) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Joint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Alias     string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	JoinType  string `protobuf:"bytes,3,opt,name=joinType,proto3" json:"joinType,omitempty"`
	JoinUsing string `protobuf:"bytes,4,opt,name=joinUsing,proto3" json:"joinUsing,omitempty"`
	JoinOn    string `protobuf:"bytes,5,opt,name=joinOn,proto3" json:"joinOn,omitempty"`
	Sortby    string `protobuf:"bytes,6,opt,name=sortby,proto3" json:"sortby,omitempty"`
}

func (x *Node_Actions_Joint) Reset() {
	*x = Node_Actions_Joint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Joint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Joint) ProtoMessage() {}

func (x *Node_Actions_Joint) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Joint.ProtoReflect.Descriptor instead.
func (*Node_Actions_Joint) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 6}
}

func (x *Node_Actions_Joint) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Node_Actions_Joint) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Node_Actions_Joint) GetJoinType() string {
	if x != nil {
		return x.JoinType
	}
	return ""
}

func (x *Node_Actions_Joint) GetJoinUsing() string {
	if x != nil {
		return x.JoinUsing
	}
	return ""
}

func (x *Node_Actions_Joint) GetJoinOn() string {
	if x != nil {
		return x.JoinOn
	}
	return ""
}

func (x *Node_Actions_Joint) GetSortby() string {
	if x != nil {
		return x.Sortby
	}
	return ""
}

type Node_Actions_Edit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Joints           []*Node_Actions_Joint      `protobuf:"bytes,5,rep,name=joints,proto3" json:"joints,omitempty"`
	FIELDS           string                     `protobuf:"bytes,14,opt,name=FIELDS,proto3" json:"FIELDS,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Edit) Reset() {
	*x = Node_Actions_Edit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Edit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Edit) ProtoMessage() {}

func (x *Node_Actions_Edit) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Edit.ProtoReflect.Descriptor instead.
func (*Node_Actions_Edit) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 7}
}

func (x *Node_Actions_Edit) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Edit) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Edit) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Edit) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Edit) GetJoints() []*Node_Actions_Joint {
	if x != nil {
		return x.Joints
	}
	return nil
}

func (x *Node_Actions_Edit) GetFIELDS() string {
	if x != nil {
		return x.FIELDS
	}
	return ""
}

func (x *Node_Actions_Edit) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

type Node_Actions_Topics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName       string                     `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	PrepareConnects  []*Node_Actions_Connection `protobuf:"bytes,2,rep,name=prepareConnects,proto3" json:"prepareConnects,omitempty"`
	NextpageConnects []*Node_Actions_Connection `protobuf:"bytes,3,rep,name=nextpageConnects,proto3" json:"nextpageConnects,omitempty"`
	IsDo             bool                       `protobuf:"varint,4,opt,name=isDo,proto3" json:"isDo,omitempty"`
	Joints           []*Node_Actions_Joint      `protobuf:"bytes,5,rep,name=joints,proto3" json:"joints,omitempty"`
	TotalForce       int32                      `protobuf:"varint,7,opt,name=totalForce,proto3" json:"totalForce,omitempty"`
	MAXPAGENO        string                     `protobuf:"bytes,8,opt,name=MAXPAGENO,proto3" json:"MAXPAGENO,omitempty"`
	TOTALNO          string                     `protobuf:"bytes,9,opt,name=TOTALNO,proto3" json:"TOTALNO,omitempty"`
	ROWCOUNT         string                     `protobuf:"bytes,10,opt,name=ROWCOUNT,proto3" json:"ROWCOUNT,omitempty"`
	PAGENO           string                     `protobuf:"bytes,11,opt,name=PAGENO,proto3" json:"PAGENO,omitempty"`
	SORTBY           string                     `protobuf:"bytes,12,opt,name=SORTBY,proto3" json:"SORTBY,omitempty"`
	SORTREVERSE      string                     `protobuf:"bytes,13,opt,name=SORTREVERSE,proto3" json:"SORTREVERSE,omitempty"`
	FIELDS           string                     `protobuf:"bytes,14,opt,name=FIELDS,proto3" json:"FIELDS,omitempty"`
	Appendix         []*any1.Any                `protobuf:"bytes,15,rep,name=appendix,proto3" json:"appendix,omitempty"`
}

func (x *Node_Actions_Topics) Reset() {
	*x = Node_Actions_Topics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Actions_Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Actions_Topics) ProtoMessage() {}

func (x *Node_Actions_Topics) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Actions_Topics.ProtoReflect.Descriptor instead.
func (*Node_Actions_Topics) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0, 1, 8}
}

func (x *Node_Actions_Topics) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Node_Actions_Topics) GetPrepareConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.PrepareConnects
	}
	return nil
}

func (x *Node_Actions_Topics) GetNextpageConnects() []*Node_Actions_Connection {
	if x != nil {
		return x.NextpageConnects
	}
	return nil
}

func (x *Node_Actions_Topics) GetIsDo() bool {
	if x != nil {
		return x.IsDo
	}
	return false
}

func (x *Node_Actions_Topics) GetJoints() []*Node_Actions_Joint {
	if x != nil {
		return x.Joints
	}
	return nil
}

func (x *Node_Actions_Topics) GetTotalForce() int32 {
	if x != nil {
		return x.TotalForce
	}
	return 0
}

func (x *Node_Actions_Topics) GetMAXPAGENO() string {
	if x != nil {
		return x.MAXPAGENO
	}
	return ""
}

func (x *Node_Actions_Topics) GetTOTALNO() string {
	if x != nil {
		return x.TOTALNO
	}
	return ""
}

func (x *Node_Actions_Topics) GetROWCOUNT() string {
	if x != nil {
		return x.ROWCOUNT
	}
	return ""
}

func (x *Node_Actions_Topics) GetPAGENO() string {
	if x != nil {
		return x.PAGENO
	}
	return ""
}

func (x *Node_Actions_Topics) GetSORTBY() string {
	if x != nil {
		return x.SORTBY
	}
	return ""
}

func (x *Node_Actions_Topics) GetSORTREVERSE() string {
	if x != nil {
		return x.SORTREVERSE
	}
	return ""
}

func (x *Node_Actions_Topics) GetFIELDS() string {
	if x != nil {
		return x.FIELDS
	}
	return ""
}

func (x *Node_Actions_Topics) GetAppendix() []*any1.Any {
	if x != nil {
		return x.Appendix
	}
	return nil
}

var File_meta_proto protoreflect.FileDescriptor

var file_meta_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x6f,
	0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc0, 0x1f, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x74,
	0x6f, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x61, 0x74, 0x6f,
	0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xd8, 0x03, 0x0a, 0x05, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x41, 0x75, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x29,
	0x0a, 0x03, 0x66, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f,
	0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x46, 0x6b, 0x52, 0x03, 0x66, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x03, 0x43, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x6f, 0x74, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6e, 0x6f, 0x74, 0x6e, 0x75, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x1a,
	0x52, 0x0a, 0x02, 0x46, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6b, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6b, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x1a, 0xee, 0x1a, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x75, 0x70, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x75, 0x70, 0x64,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x70, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x63, 0x73, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75,
	0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x1a, 0xcc, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x51, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75,
	0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x8a, 0x02, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0f,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65, 0x78,
	0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x30, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x1a, 0xa4,
	0x02, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x70, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x78, 0x1a, 0x8a, 0x02, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x75, 0x70, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65,
	0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75,
	0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x73, 0x44, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f,
	0x12, 0x30, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x78, 0x1a, 0x8a, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c,
	0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x30, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x1a,
	0x8a, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x1a, 0xa5, 0x01, 0x0a,
	0x05, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x55, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x55,
	0x73, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x62, 0x79, 0x1a, 0xd6, 0x02, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c,
	0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x34, 0x0a,
	0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x6a, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x12, 0x30, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x1a, 0x9e, 0x04,
	0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x44, 0x6f, 0x12, 0x34, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6c, 0x65, 0x63,
	0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x41, 0x58, 0x50, 0x41, 0x47, 0x45, 0x4e, 0x4f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4d, 0x41, 0x58, 0x50, 0x41, 0x47, 0x45, 0x4e, 0x4f, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x4f, 0x54, 0x41, 0x4c, 0x4e, 0x4f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x4f, 0x54, 0x41, 0x4c, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x4f, 0x57, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x4f, 0x57, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x41, 0x47, 0x45, 0x4e, 0x4f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x50, 0x41, 0x47, 0x45, 0x4e, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x4f,
	0x52, 0x54, 0x42, 0x59, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x4f, 0x52, 0x54,
	0x42, 0x59, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x4f, 0x52, 0x54, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53,
	0x45, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x4f, 0x52, 0x54, 0x52, 0x45, 0x56,
	0x45, 0x52, 0x53, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x12, 0x30, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x78, 0x22, 0x64,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x6e, 0x65, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4d, 0x61,
	0x70, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4d, 0x61,
	0x6e, 0x79, 0x10, 0x04, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f,
	0x6c, 0x65, 0x63, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67, 0x6f, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_proto_rawDescOnce sync.Once
	file_meta_proto_rawDescData = file_meta_proto_rawDesc
)

func file_meta_proto_rawDescGZIP() []byte {
	file_meta_proto_rawDescOnce.Do(func() {
		file_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_proto_rawDescData)
	})
	return file_meta_proto_rawDescData
}

var file_meta_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_meta_proto_goTypes = []interface{}{
	(Node_Actions_ConnectType)(0),   // 0: molecule.Node.Actions.ConnectType
	(*Node)(nil),                    // 1: molecule.Node
	(*Graph)(nil),                   // 2: molecule.Graph
	(*Node_Table)(nil),              // 3: molecule.Node.Table
	(*Node_Actions)(nil),            // 4: molecule.Node.Actions
	(*Node_Table_Col)(nil),          // 5: molecule.Node.Table.Col
	(*Node_Table_Fk)(nil),           // 6: molecule.Node.Table.Fk
	(*Node_Actions_Connection)(nil), // 7: molecule.Node.Actions.Connection
	(*Node_Actions_Insert)(nil),     // 8: molecule.Node.Actions.Insert
	(*Node_Actions_Update)(nil),     // 9: molecule.Node.Actions.Update
	(*Node_Actions_Insupd)(nil),     // 10: molecule.Node.Actions.Insupd
	(*Node_Actions_Delete)(nil),     // 11: molecule.Node.Actions.Delete
	(*Node_Actions_Delecs)(nil),     // 12: molecule.Node.Actions.Delecs
	(*Node_Actions_Joint)(nil),      // 13: molecule.Node.Actions.Joint
	(*Node_Actions_Edit)(nil),       // 14: molecule.Node.Actions.Edit
	(*Node_Actions_Topics)(nil),     // 15: molecule.Node.Actions.Topics
	nil,                             // 16: molecule.Node.Actions.Connection.RelateArgsEntry
	nil,                             // 17: molecule.Node.Actions.Connection.RelateExtraEntry
	(*any1.Any)(nil),                // 18: google.protobuf.Any
}
var file_meta_proto_depIdxs = []int32{
	3,  // 0: molecule.Node.atomTable:type_name -> molecule.Node.Table
	4,  // 1: molecule.Node.atomActions:type_name -> molecule.Node.Actions
	1,  // 2: molecule.Graph.nodes:type_name -> molecule.Node
	5,  // 3: molecule.Node.Table.columns:type_name -> molecule.Node.Table.Col
	6,  // 4: molecule.Node.Table.fks:type_name -> molecule.Node.Table.Fk
	8,  // 5: molecule.Node.Actions.insertItem:type_name -> molecule.Node.Actions.Insert
	9,  // 6: molecule.Node.Actions.updateItem:type_name -> molecule.Node.Actions.Update
	10, // 7: molecule.Node.Actions.insupdItem:type_name -> molecule.Node.Actions.Insupd
	11, // 8: molecule.Node.Actions.deleteItem:type_name -> molecule.Node.Actions.Delete
	12, // 9: molecule.Node.Actions.delecsItem:type_name -> molecule.Node.Actions.Delecs
	14, // 10: molecule.Node.Actions.editItem:type_name -> molecule.Node.Actions.Edit
	15, // 11: molecule.Node.Actions.topicsItem:type_name -> molecule.Node.Actions.Topics
	16, // 12: molecule.Node.Actions.Connection.relateArgs:type_name -> molecule.Node.Actions.Connection.RelateArgsEntry
	17, // 13: molecule.Node.Actions.Connection.relateExtra:type_name -> molecule.Node.Actions.Connection.RelateExtraEntry
	0,  // 14: molecule.Node.Actions.Connection.dimension:type_name -> molecule.Node.Actions.ConnectType
	7,  // 15: molecule.Node.Actions.Insert.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 16: molecule.Node.Actions.Insert.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	18, // 17: molecule.Node.Actions.Insert.appendix:type_name -> google.protobuf.Any
	7,  // 18: molecule.Node.Actions.Update.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 19: molecule.Node.Actions.Update.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	18, // 20: molecule.Node.Actions.Update.appendix:type_name -> google.protobuf.Any
	7,  // 21: molecule.Node.Actions.Insupd.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 22: molecule.Node.Actions.Insupd.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	18, // 23: molecule.Node.Actions.Insupd.appendix:type_name -> google.protobuf.Any
	7,  // 24: molecule.Node.Actions.Delete.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 25: molecule.Node.Actions.Delete.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	18, // 26: molecule.Node.Actions.Delete.appendix:type_name -> google.protobuf.Any
	7,  // 27: molecule.Node.Actions.Delecs.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 28: molecule.Node.Actions.Delecs.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	18, // 29: molecule.Node.Actions.Delecs.appendix:type_name -> google.protobuf.Any
	7,  // 30: molecule.Node.Actions.Edit.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 31: molecule.Node.Actions.Edit.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	13, // 32: molecule.Node.Actions.Edit.joints:type_name -> molecule.Node.Actions.Joint
	18, // 33: molecule.Node.Actions.Edit.appendix:type_name -> google.protobuf.Any
	7,  // 34: molecule.Node.Actions.Topics.prepareConnects:type_name -> molecule.Node.Actions.Connection
	7,  // 35: molecule.Node.Actions.Topics.nextpageConnects:type_name -> molecule.Node.Actions.Connection
	13, // 36: molecule.Node.Actions.Topics.joints:type_name -> molecule.Node.Actions.Joint
	18, // 37: molecule.Node.Actions.Topics.appendix:type_name -> google.protobuf.Any
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_meta_proto_init() }
func file_meta_proto_init() {
	if File_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Table_Col); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Table_Fk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Insert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Insupd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Delecs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Joint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Edit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Actions_Topics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_proto_goTypes,
		DependencyIndexes: file_meta_proto_depIdxs,
		EnumInfos:         file_meta_proto_enumTypes,
		MessageInfos:      file_meta_proto_msgTypes,
	}.Build()
	File_meta_proto = out.File
	file_meta_proto_rawDesc = nil
	file_meta_proto_goTypes = nil
	file_meta_proto_depIdxs = nil
}
